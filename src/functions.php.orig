<?php
if ( ! function_exists( 't2h_post_nav' ) ) :
function t2h_post_nav(){
	global $post;

	// Don't print empty markup if there's nowhere to navigate.
	$previous = ( is_attachment() ) ? get_post( $post->post_parent ) : get_adjacent_post( false, '', true );
	$next     = get_adjacent_post( false, '', false );

	if ( ! $next && ! $previous )
		return;
	?>
	<nav class="navigation post-navigation" role="navigation">
		<h1 class="screen-reader-text"><?php _e( 'Post navigation', 't2h' ); ?></h1>
		<ul  class="nav-links default-wp-page pager clearfix">
			<li class="previous">
				<?php previous_post_link( '%link', _x( '<span title="%title"><i class="fa fa-chevron-left"></i>  Previous Post</span>', 'Previous post', 't2h' ) ); ?>
			</li>
			<li class="next">
				<?php next_post_link( '%link', _x( '<span title="%title">Next Post  <i class="fa fa-chevron-right"></i></span>', 'Next post', 't2h' ) ); ?>
			</li>
		</ul><!-- .nav-links -->
	</nav><!-- .navigation -->	
<?php
}
endif;

if ( ! function_exists( 't2h_scripts_styles' ) ) :
	function t2h_scripts_styles() {
		/*
		 * Adds JavaScript to pages with the comment form to support
		 * sites with threaded comments (when in use).
		 */
		if ( is_singular() && comments_open() && get_option( 'thread_comments' ) )
			wp_enqueue_script( 'comment-reply' );
		
		wp_enqueue_style( 'bootstrap', get_template_directory_uri() . '/css/bootstrap.min.css', array(), '3.0.3' );
<<<<<<< HEAD
		wp_enqueue_style( 'font-awesome', "//maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css", array(), '4.5.0' );
		wp_enqueue_style( 'open-sans', '//fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,700,600', array(), '1.0' );
		wp_enqueue_style( 'font-awesome', "//cdnjs.cloudflare.com/ajax/libs/prettify/r298/prettify.min.css", array(), '1.0' );
=======
		wp_enqueue_style( 'font-awesome', "https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css", array(), '4.5.0' );
		wp_enqueue_style( 'open-sans', 'https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,700,600', array(), '1.0' );
>>>>>>> 5cf1f63333caab45f551a66024bd158862130aea
		// Loads our main stylesheet.
		wp_enqueue_style( 't2h-style', get_stylesheet_uri(), array('bootstrap'), '2013-07-18' );
		

		//Scripts
		wp_enqueue_script( 'jquery' );
		wp_enqueue_script( 'bootstrap', "//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js", array( 'jquery' ), '1.0', true );
		wp_enqueue_script( 'scroll', get_template_directory_uri() . '/js/jquery-scrolltofixed-min.js', array( 'jquery' ), '1.0', true );
<<<<<<< HEAD
		wp_enqueue_script( 'prettify', "//cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.min.js", array(), '1.0', true );
		wp_enqueue_script( 't2h-script', get_template_directory_uri() . '/js/script.js', array( 'jquery', 'scroll', 'prettify' ), '1.0', true );
=======
		wp_enqueue_script( 't2h-script', get_template_directory_uri() . '/js/script.js', array( 'jquery', 'scroll' ), '1.0', true );
>>>>>>> 5cf1f63333caab45f551a66024bd158862130aea
	}
	add_action( 'wp_enqueue_scripts', 't2h_scripts_styles' );
endif;


add_action("admin_init", "add_custom_metaboxes");

/**
 * Adds the Metaboxes.
 *
 * @uses this is called as an action to add the custom meta boxes.
 *
 * @since 0.0.1
 *
 * @return void.
 */
function add_custom_metaboxes(){
	add_meta_box("has_code_sample-meta", "Code and Sample", "has_code_sample", "post", "side", "high");
}

/**
 * Metabox for the Public link available of not.
 *
 * @uses Puts the demo of tutorial and code of tutorial meta boxes in the post craetion boxes
 *
 * @since 0.0.1
 *
 * @return void
 */
function has_code_sample(){
	global $post;
	$custom = get_post_custom($post->ID);
	$has_code = $custom["has_code"][0];
	$has_sample = $custom["has_sample"][0];
	$code_link = $custom["code_link"][0];
	$sample_link = $custom["sample_link"][0];
	?>
	<div>
		<label>Has Code:</label>
		<p>
			<input type="radio" name="has_code" value="Yes"<?php if($has_code == 'Yes') echo 'checked="checked"'; ?> />&nbsp;Yes&nbsp;&nbsp;
			<input type="radio" name="has_code" value="No" <?php if($has_code == 'No') echo 'checked="checked"'; ?>/>&nbsp;No
		</p>
		<div>
			<input type="text" name="code_link" value="<?php echo $code_link; ?>" style="display: block; width: 100%" />
		</div>
		<br/>
	</div>
	<div>
		<label>Provides Sample/Download:</label>
		<p>
			<input type="radio" name="has_sample" value="Yes"<?php if($has_sample == 'Yes') echo 'checked="checked"'; ?> />&nbsp;Yes&nbsp;&nbsp;
			<input type="radio" name="has_sample" value="No" <?php if($has_sample == 'No') echo 'checked="checked"'; ?>/>&nbsp;No
		</p>
		<div>
			<input type="text" name="sample_link" value="<?php echo $sample_link; ?>" style="display: block; width: 100%" />
		</div>
	</div>
	<?php
}

add_action('save_post', 'save_details');

/**
 * Return the post URL.
 *
 * @uses Saves the meta values of the has_code and has_sample meta keys for posts.
 *
 * @since 0.0.1
 *
 * @return void
 */
function save_details(){
	global $post;

	update_post_meta($post->ID, "has_code", $_POST["has_code"]);
	update_post_meta($post->ID, "has_sample", $_POST["has_sample"]);
	update_post_meta($post->ID, "sample_link", $_POST["sample_link"]);
	update_post_meta($post->ID, "code_link", $_POST["code_link"]);
	
}


add_filter('the_content', 'add_demo_box', 1);
function add_demo_box($content) {
	$demo_box = '';
	// $custom = get_post_custom($post->ID);
	$code_link = get_post_meta( get_the_ID(), 'code_link', true );
	$sample_link = get_post_meta( get_the_ID(), 'sample_link', true );

	$demo_box .= '<div class="demo-and-download">
		<!-- Demo and Download Link -->';
		if( $code_link != '' ){
			$demo_box .= '<a href="'. $code_link .'" target="_blank" class="btn btn-primary">Demo</a>';
		} if( $sample_link != '' ){ 
			$demo_box .= '<a href="'. $sample_link .'" target="_blank" class="btn btn-primary">Download</a>';
		}
	$demo_box .= '</div>';

	if(is_single() && !is_home()) {
		$content .= $demo_box;
	}
	return $content;
}



/**
 * Filter the page title.
 *
 * Creates a nicely formatted and more specific title element text for output
 * in head of document, based on current view.
 *
 * @since 0.0.1
 *
 * @param string $title Default title text for current view.
 * @param string $sep   Optional separator.
 * @return string The filtered title.
 */
function t2h_wp_title( $title, $sep ) {
	global $paged, $page;

	if ( is_feed() )
		return $title;

	// Add the site name.
	$title .= get_bloginfo( 'name' );

	// Add the site description for the home/front page.
	$site_description = get_bloginfo( 'description', 'display' );
	if ( $site_description && ( is_home() || is_front_page() ) )
		$title = "$title $sep $site_description";

	// Add a page number if necessary.
	if ( ( $paged >= 2 || $page >= 2 ) && ! is_404() )
		$title = "$title $sep " . sprintf( __( 'Page %s', 't2h' ), max( $paged, $page ) );

	return $title;
}
add_filter( 'wp_title', 't2h_wp_title', 10, 2 );
/*
 * Set up the content width value based on the theme's design.
 *
 * @see t2h_content_width() for template-specific adjustments.
 */
if ( ! isset( $content_width ) )
	$content_width = 604;

if ( ! function_exists( 't2h_paging_nav' ) ) :
/**
 * Display navigation to next/previous set of posts when applicable.
 *
 * @since Time to Hack 1.0
 */
function t2h_paging_nav() {
	global $wp_query;

	// Don't print empty markup if there's only one page.
	if ( $wp_query->max_num_pages < 2 )
		return;
	?>
	<nav class="navigation paging-navigation" role="navigation">
		<h1 class="screen-reader-text"><?php _e( 'Posts navigation', 't2h' ); ?></h1>
		<div class="nav-links">

			<?php if ( get_next_posts_link() ) : ?>
			<div class="nav-previous"><?php next_posts_link( __( '<span class="meta-nav">&larr;</span> Older posts', 't2h' ) ); ?></div>
			<?php endif; ?>

			<?php if ( get_previous_posts_link() ) : ?>
			<div class="nav-next"><?php previous_posts_link( __( 'Newer posts <span class="meta-nav">&rarr;</span>', 't2h' ) ); ?></div>
			<?php endif; ?>

		</div><!-- .nav-links -->
	</nav><!-- .navigation -->
	<?php
}
endif;

if ( ! function_exists( 't2h_entry_meta' ) ) :
/**
 * Print HTML with meta information for current post: categories, tags, permalink, author, and date.
 *
 * Create your own t2h_entry_meta() to override in a child theme.
 *
 * @since Time to Hack 1.0
 */
function t2h_entry_meta() {
	if ( is_sticky() && is_home() && ! is_paged() )
		echo '<span class="featured-post">' . esc_html__( 'Sticky', 't2h' ) . '</span>';

	if ( ! has_post_format( 'link' ) && 'post' == get_post_type() )
		t2h_entry_date();

	// Translators: used between list items, there is a space after the comma.
	$categories_list = get_the_category_list( __( ', ', 't2h' ) );
	if ( $categories_list ) {
		echo '<span class="categories-links">' . $categories_list . '</span>';
	}

	// Translators: used between list items, there is a space after the comma.
	$tag_list = get_the_tag_list( '', __( ', ', 't2h' ) );
	if ( $tag_list ) {
		echo '<span class="tags-links">' . $tag_list . '</span>';
	}

	// Post author
	if ( 'post' == get_post_type() ) {
		printf( '<span class="author vcard"><a class="url fn n" href="%1$s" title="%2$s" rel="author">%3$s</a></span>',
			esc_url( get_author_posts_url( get_the_author_meta( 'ID' ) ) ),
			esc_attr( sprintf( __( 'View all posts by %s', 't2h' ), get_the_author() ) ),
			get_the_author()
		);
	}
}
endif;

if ( ! function_exists( 't2h_entry_date' ) ) :
/**
 * Print HTML with date information for current post.
 *
 * Create your own t2h_entry_date() to override in a child theme.
 *
 * @since Time to Hack 1.0
 *
 * @param boolean $echo (optional) Whether to echo the date. Default true.
 * @return string The HTML-formatted post date.
 */
function t2h_entry_date( $echo = true ) {
	if ( has_post_format( array( 'chat', 'status' ) ) )
		$format_prefix = _x( '%1$s on %2$s', '1: post format name. 2: date', 't2h' );
	else
		$format_prefix = '%2$s';

	$date = sprintf( '<span class="date"><a href="%1$s" title="%2$s" rel="bookmark"><time class="entry-date" datetime="%3$s">%4$s</time></a></span>',
		esc_url( get_permalink() ),
		esc_attr( sprintf( __( 'Permalink to %s', 't2h' ), the_title_attribute( 'echo=0' ) ) ),
		esc_attr( get_the_date( 'c' ) ),
		esc_html( sprintf( $format_prefix, get_post_format_string( get_post_format() ), get_the_date() ) )
	);

	if ( $echo )
		echo $date;

	return $date;
}
endif;

if ( ! function_exists( 't2h_the_attached_image' ) ) :
/**
 * Print the attached image with a link to the next attached image.
 *
 * @since Time to Hack 1.0
 */
function t2h_the_attached_image() {
	/**
	 * Filter the image attachment size to use.
	 *
	 * @since Time to Hack 1.0
	 *
	 * @param array $size {
	 *     @type int The attachment height in pixels.
	 *     @type int The attachment width in pixels.
	 * }
	 */
	$attachment_size     = apply_filters( 't2h_attachment_size', array( 724, 724 ) );
	$next_attachment_url = wp_get_attachment_url();
	$post                = get_post();

	/*
	 * Grab the IDs of all the image attachments in a gallery so we can get the URL
	 * of the next adjacent image in a gallery, or the first image (if we're
	 * looking at the last image in a gallery), or, in a gallery of one, just the
	 * link to that image file.
	 */
	$attachment_ids = get_posts( array(
		'post_parent'    => $post->post_parent,
		'fields'         => 'ids',
		'numberposts'    => -1,
		'post_status'    => 'inherit',
		'post_type'      => 'attachment',
		'post_mime_type' => 'image',
		'order'          => 'ASC',
		'orderby'        => 'menu_order ID',
	) );

	// If there is more than 1 attachment in a gallery...
	if ( count( $attachment_ids ) > 1 ) {
		foreach ( $attachment_ids as $idx => $attachment_id ) {
			if ( $attachment_id == $post->ID ) {
				$next_id = $attachment_ids[ ( $idx + 1 ) % count( $attachment_ids ) ];
				break;
			}
		}

		// get the URL of the next image attachment...
		if ( $next_id )
			$next_attachment_url = get_attachment_link( $next_id );

		// or get the URL of the first image attachment.
		else
			$next_attachment_url = get_attachment_link( reset( $attachment_ids ) );
	}

	printf( '<a href="%1$s" title="%2$s" rel="attachment">%3$s</a>',
		esc_url( $next_attachment_url ),
		the_title_attribute( array( 'echo' => false ) ),
		wp_get_attachment_image( $post->ID, $attachment_size )
	);
}
endif;

/**
 * Return the post URL.
 *
 * @uses get_url_in_content() to get the URL in the post meta (if it exists) or
 * the first link found in the post content.
 *
 * Falls back to the post permalink if no URL is found in the post.
 *
 * @since Time to Hack 1.0
 *
 * @return string The Link format URL.
 */
function t2h_get_link_url() {
	$content = get_the_content();
	$has_url = get_url_in_content( $content );

	return ( $has_url ) ? $has_url : apply_filters( 'the_permalink', get_permalink() );
}

if ( ! function_exists( 't2h_excerpt_more' ) && ! is_admin() ) :
/**
 * Replaces "[...]" (appended to automatically generated excerpts) with ...
 * and a Continue reading link.
 *
 * @since Time to Hack 1.4
 *
 * @param string $more Default Read More excerpt link.
 * @return string Filtered Read More excerpt link.
 */
function t2h_excerpt_more( $more ) {
	$link = sprintf( '<a href="%1$s" class="more-link">%2$s</a>',
		esc_url( get_permalink( get_the_ID() ) ),
			/* translators: %s: Name of current post */
			sprintf( __( 'Continue reading %s <span class="meta-nav">&rarr;</span>', 't2h' ), '<span class="screen-reader-text">' . get_the_title( get_the_ID() ) . '</span>' )
		);
	return ' &hellip; ' . $link;
}
add_filter( 'excerpt_more', 't2h_excerpt_more' );
endif;

/**
 * Extend the default WordPress body classes.
 *
 * Adds body classes to denote:
 * 1. Single or multiple authors.
 * 2. Active widgets in the sidebar to change the layout and spacing.
 * 3. When avatars are disabled in discussion settings.
 *
 * @since Time to Hack 1.0
 *
 * @param array $classes A list of existing body class values.
 * @return array The filtered body class list.
 */
function t2h_body_class( $classes ) {
	if ( ! is_multi_author() )
		$classes[] = 'single-author';

	if ( is_active_sidebar( 'sidebar-2' ) && ! is_attachment() && ! is_404() )
		$classes[] = 'sidebar';

	if ( ! get_option( 'show_avatars' ) )
		$classes[] = 'no-avatars';

	return $classes;
}
add_filter( 'body_class', 't2h_body_class' );

/**
 * Adjust content_width value for video post formats and attachment templates.
 *
 * @since Time to Hack 1.0
 */
function t2h_content_width() {
	global $content_width;

	if ( is_attachment() )
		$content_width = 724;
	elseif ( has_post_format( 'audio' ) )
		$content_width = 484;
}
add_action( 'template_redirect', 't2h_content_width' );

/**
 * Add postMessage support for site title and description for the Customizer.
 *
 * @since Time to Hack 1.0
 *
 * @param WP_Customize_Manager $wp_customize Customizer object.
 */
function t2h_customize_register( $wp_customize ) {
	$wp_customize->get_setting( 'blogname' )->transport         = 'postMessage';
	$wp_customize->get_setting( 'blogdescription' )->transport  = 'postMessage';
	$wp_customize->get_setting( 'header_textcolor' )->transport = 'postMessage';

	if ( isset( $wp_customize->selective_refresh ) ) {
		$wp_customize->selective_refresh->add_partial( 'blogname', array(
			'selector' => '.site-title',
			'container_inclusive' => false,
			'render_callback' => 't2h_customize_partial_blogname',
		) );
		$wp_customize->selective_refresh->add_partial( 'blogdescription', array(
			'selector' => '.site-description',
			'container_inclusive' => false,
			'render_callback' => 't2h_customize_partial_blogdescription',
		) );
	}
}
add_action( 'customize_register', 't2h_customize_register' );

/**
 * Render the site title for the selective refresh partial.
 *
 * @since Time to Hack 1.9
 * @see t2h_customize_register()
 *
 * @return void
 */
function t2h_customize_partial_blogname() {
	bloginfo( 'name' );
}

/**
 * Render the site tagline for the selective refresh partial.
 *
 * @since Time to Hack 1.9
 * @see t2h_customize_register()
 *
 * @return void
 */
function t2h_customize_partial_blogdescription() {
	bloginfo( 'description' );
}
